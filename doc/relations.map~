#
# Here is a formal automatic procedure (algorithm) for generating relations terms
# from two given paths (to the MRCA - the most recent common ancestor). The paths
# are represented by single letters M (for man) or F (for women). For example, 
# M denotes man (self), MM - his father, MMM - his grandfather, MMF - his paternal 
# grandmother etc.
#
# The algorithm is not given in a form of some specific language but exists as a 
# simple mapping: paths->relations terms.
# Provided that the paths have been automatically generated from a binary tree or 
# a structure.
#
# The notations below ( in the mapping) are 4 delimited by comma records: path1,path2,name1,name2
# (where path1,path2 are paths from individuals to the same common ancestor)
# We only enumarate (evaluate) the cases when LENGTH(path1)=(path2) and LENGTH(path1)<LENGTH(path2),
# while the case LENGTH(path2)>LENGTH(path1) is just the reversed (second) case.
# X denotes any letter/gender (either M or F). Also, the last letter in each path (when given as 
# template X is always the same, since it denotes the same person, so
# "self" is either (F,F) or (M,M)
# while pair (MX,FX) denotes actually 2 pairs, not 4: (MM,FM), (MF,FF) only 
# etc.
# 
# (X*N) means a sequence of N letters
# <(g.-)*N> means prefix 'g.-' taken N times, as in 'g.-g.-g.-great-uncle' (N=3 in this case)
# names are taken from:
# http://upload.wikimedia.org/wikipedia/commons/7/78/European_kinship_system_en.svg
# (with minor simplifications in abbreviations)
#

X,X,self,self

MX,MX,brother,brother
MX,FX,brother,sister
FX,FX,sister,sister

M,MM,father,son
M,FM,father,daughter
F,MF,mother,son
F,FF,mother,daughter

F,MXF,grandmother,grandson
F,FXF,grandmother,granddaughter
M,MXM,grandfather,grandson
M,FXM,grandfather,granddaughter

F,MXXF,g.-grandmother,g.-grandson
F,FXXF,g.-grandmother,g.-granddaughter
M,MXXM,g.-grandfather,g.-grandson
M,FXXM,g.-grandfather,g.-granddaughter
...
F,MX(X*N)F,<(g.-)*N>grandmother,<(g.-)*N>grandson
F,FX(X*N)F,<(g.-)*N>grandmother,<(g.-)*N>granddaughter
M,MX(X*N)M,<(g.-)*N>grandfather,<(g.-)*N>grandson
M,FX(X*N)M,<(g.-)*N>grandfather,<(g.-)*N>granddaughter
...
...
MX,MXX,uncle,nephew
MX,FXX,uncle,niece
FX,MXX,aunt,nephew
FX,FXX,aunt,niece

MX,MXXX,great-uncle,grand-nephew
MX,FXXX,great-uncle,grand-niece
FX,MXXX,great-aunt,grand-nephew
FX,FXXX,great-aunt,grand-niece

MX,MXXXX,g.-great-uncle,g.-grand-nephew
MX,FXXXX,g.-great-uncle,g.-grand-niece
FX,MXXXX,g.-great-aunt,g.-grand-nephew
FX,FXXXX,g.-great-aunt,g.-grand-niece
...
FX,FXXXX,g.-great-aunt,g.-grand-niece
...
MX,MXX(X*N)X,<(g.-)*N>great-uncle,<(g.-)*N>grand-nephew
MX,FXX(X*N)X,<(g.-)*N>great-uncle,<(g.-)*N>grand-niece
FX,MXX(X*N)X,<(g.-)*N>great-aunt,<(g.-)*N>grand-nephew
FX,FXX(X*N)X,<(g.-)*N>great-aunt,<(g.-)*N>grand-niece
...

#
#cousines on the same level (the same number of X)
#
XXX,XXX,cousin,cousin
XXXX,XXXX,2-cousin,2-cousin
XXXXX,XXXXX,3-cousin,3-cousin
X(X*N)X,X(X*N)X,N-cousin,N-cousin

#
#now not on the same level (M>N)
#
XXX,XXXX,1-cousin once-removed,1-cousin once-removed
XXX,XXXXX,1-cousin twice-removed,1-cousin twice-removed
...
XXXX,XXXXX,2-cousin once-removed,2-cousin once-removed
XXXX,XXXXXX,2-cousin twice-removed,2-cousin twice-removed
...
X(X*N)X,X(X*M)X,N-cousin (M-N) removed

